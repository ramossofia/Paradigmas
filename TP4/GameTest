// src/GameTests.java
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;

public class GameTests {

    @Test
    public void testPlayerCannotPlayTwiceInARow() {
        Player player1 = new Player("Alice", 3);
        Player player2 = new Player("Bob", 0);
        List<Player> players = Arrays.asList(player1, player2);
        List<Integer> cards = Arrays.asList(10);

        Game game = new Game();
        game.startGame(players, 2, cards);  // Each player gets 2 tokens

        // Alice places a token
        game.executeAction(new PlaceToken(player1));

        // Alice tries to play again, should throw an exception
        try {
            game.executeAction(new PlaceToken(player1));
            fail("Expected IllegalStateException");
        } catch (IllegalStateException e) {
            assertEquals("It's not Alice's turn.", e.getMessage());
        }
    }
}
